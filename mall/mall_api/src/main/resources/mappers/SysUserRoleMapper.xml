<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yst.mall.dao.SysUserRoleMapper" >
  <resultMap id="BaseResultMap" type="com.yst.mall.model.SysUserRole" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="SysRoleMap" type="com.yst.mall.model.SysRole">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Dec 04 11:17:05 CST 2017.
        -->
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR"/>
        <result column="IS_SUPER" property="isSuper" jdbcType="VARCHAR"/>
        <result column="IS_DELETED" property="isDeleted" jdbcType="VARCHAR"/>
        <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USER_ID, ROLE_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yst.mall.model.SysUserRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_user_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_user_role
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_user_role
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yst.mall.model.SysUserRoleExample" >
    delete from sys_user_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yst.mall.model.SysUserRole" >
    insert into sys_user_role (ID, USER_ID, ROLE_ID
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yst.mall.model.SysUserRole" >
    insert into sys_user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="roleId != null" >
        ROLE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yst.mall.model.SysUserRoleExample" resultType="java.lang.Integer" >
    select count(*) from sys_user_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_user_role
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_user_role
    set ID = #{record.id,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      ROLE_ID = #{record.roleId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yst.mall.model.SysUserRole" >
    update sys_user_role
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yst.mall.model.SysUserRole" >
    update sys_user_role
    set USER_ID = #{userId,jdbcType=VARCHAR},
      ROLE_ID = #{roleId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
      <insert id="batchInsert" parameterType="list">
        insert into SYS_USER_ROLE (ID, USER_ID, ROLE_ID)
        <foreach collection="list" item="item" index="index" separator="union all">
            select #{item.id,jdbcType=VARCHAR},
            #{item.userId,jdbcType=VARCHAR},
            #{item.roleId,jdbcType=VARCHAR}
            from dual
        </foreach>
    </insert>
	<select id="getRoleNamesByUserId" resultType="string" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Dec 04 14:08:33 CST 2017.
        -->
        select r.role_name from SYS_ROLE r where r.id in(
        select t.role_id
        from SYS_USER_ROLE t
        where t.user_id = #{userId,jdbcType=VARCHAR}
        ) and r.is_deleted = '0'
    </select>
<select id="getRolesByUserId" resultMap="SysRoleMap" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Dec 04 14:08:33 CST 2017.
        -->
        select r.* from SYS_ROLE r where r.id in(
        select t.role_id
        from SYS_USER_ROLE t
        where t.user_id = #{userId,jdbcType=VARCHAR}
        ) and r.is_deleted = '0'
    </select>
    <select id="countByRoleId" resultType="Integer" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Dec 04 14:08:33 CST 2017.
        -->
        select count(1)
        from SYS_USER_ROLE t
        where t.role_id = #{roleId,jdbcType=VARCHAR}
    </select>
    <!-- mysql版本-->
    <delete id="deleteByUserId" parameterType="String">
        DELETE t from SYS_USER_ROLE t
          where t.user_id = #{userId,jdbcType=VARCHAR}
    </delete>
</mapper>